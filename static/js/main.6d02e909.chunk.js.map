{"version":3,"sources":["components/constants.tsx","components/Lockscreen.tsx","components/Phone.tsx","components/index.tsx","reportWebVitals.ts","assets/logo.svg","components/PhoneContent.tsx","components/Hero.tsx","components/Header.tsx","components/ParamsSelection.tsx","components/Slider.tsx","App.tsx","index.tsx"],"names":["phoneHeight","phoneColor","phoneSecondaryColor","dark","cameraColor","yellow","gray","LockscreenOverlay","styled","div","props","status","Clock","getTime","d","Date","hours","String","getHours","minutes","getMinutes","seconds","getSeconds","length","Lockscreen","React","useState","time","setTime","setStatus","useEffect","setTimeout","Container","height","width","phoneWidth","color","shadowColor","UpperSpeaker","Screen","HomeButton","Camera","VolumeButtons","LockButton","Content","Title","h3","Phone","caseColor","detailsColor","volumeButtonsColor","text","children","content","screenColor","component","renderDefault","lockscreen","toggleLockScreen","onClick","Smartphone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppLogo","img","AppHeader","nav","p","Link","a","ExampleContent","src","Logo","href","target","H1","h1","Description","Badge","Component","PhoneWrapper","phoneParams","Label","label","onChange","hex","Input","input","Slider","type","min","max","value","id","e","Number","Paragraph","PhoneParamsSelection","ResultWrapper","Code","code","CodeBlock","App","setCaseColor","setScreenColor","setShadowsColor","setDetailsColor","camColor","setCameraColor","setVolumeButtonsColor","setWidth","setHeight","style","marginLeft","margin","fontWeight","textAlign","paddingTop","split","map","row","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d02e909.chunk.js","sourcesContent":["export const phoneWidth = 380;\nexport const phoneHeight = 700;\nexport const phoneColor = '#f3f0dd';\nexport const phoneSecondaryColor = '#b0b3b2';\nexport const dark = '#374D5C';\nexport const cameraColor = '#f4745d';\n\nexport const yellow = 'rgb(245, 223, 77)';\nexport const gray = '#202124';\nexport const reactDefaultBackground = '#282c34';\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface LockscreenOverlay {\n  status: boolean;\n}\n\nconst LockscreenOverlay = styled.div`\n  background-color: rgb(30, 30, 30, 0.9);\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  left: 0px;\n  top: 0px;\n  border-radius: 25px;\n  z-index: 10;\n  color: white;\n  font-family: 'Monaco', 'Arial', 'consolas', 'Calibri', 'Sans serif', 'Sans';\n  font-size: 3rem;\n  transition: all 0.2s linear;\n  visibility: ${(props: LockscreenOverlay) =>\n    props.status ? `visible` : `hidden`};\n`;\n\nconst Clock = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n`;\n\nfunction getTime(): string {\n  const d = new Date();\n  let hours = String(d.getHours());\n  let minutes = String(d.getMinutes());\n  let seconds = String(d.getSeconds());\n  if (hours.length < 2) {\n    hours = '0' + hours;\n  }\n  if (minutes.length < 2) {\n    minutes = '0' + minutes;\n  }\n  if (seconds.length < 2) {\n    seconds = '0' + seconds;\n  }\n  return `${hours}:${minutes}:${seconds}`;\n}\n\ninterface Props {\n  status: boolean;\n}\n\nexport default function Lockscreen(props: Props) {\n  const [time, setTime] = React.useState<string>(getTime());\n  const [status, setStatus] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setTime(getTime());\n    }, 1000);\n  }, [time]);\n\n  return (\n    <LockscreenOverlay status={status}>\n      <Clock>{time}</Clock>\n    </LockscreenOverlay>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  ContainerProps,\n  UpperSpeakProps,\n  ScreenProps,\n  HomeButtonProps,\n  CameraProps,\n  VolumeProps,\n  ContentProps,\n} from './interfaces';\n\nimport {\n  phoneWidth,\n  phoneHeight,\n  phoneColor,\n  phoneSecondaryColor,\n  dark,\n  cameraColor,\n} from './constants';\n\nimport Lockscreen from './Lockscreen';\n\nconst Container = styled.div`\n  position: relative;\n  cursor: pointer;\n  height: ${(props: ContainerProps) =>\n    props.height ? props.height : phoneHeight + 'px'};\n  width: ${(props: ContainerProps) =>\n    props.width ? props.width : phoneWidth + 'px'};\n  background-color: ${(props: ContainerProps) =>\n    props.color ? props.color : phoneColor};\n  border-radius: 25px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  transition: all 0.2s linear;\n  box-shadow: 0 10px\n    ${(props: ContainerProps) =>\n      props.shadowColor ? props.shadowColor : phoneSecondaryColor};\n`;\n\nconst UpperSpeaker = styled.div`\n  width: 200px;\n  height: 15px;\n  position: absolute;\n  top: 15px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 25px;\n  background-color: ${(props: UpperSpeakProps) =>\n    props.color ? props.color : dark};\n`;\n\nconst Screen = styled.div`\n  background-color: ${(props: ScreenProps) =>\n    props.color ? props.color : dark};\n  height: ${(props: ContainerProps) =>\n    props.height ? `calc(${props.height} - 95px)` : phoneHeight - 110 + 'px'};\n  width: ${(props: ContainerProps) =>\n    props.width\n      ? `min(calc(${props.width} - 30px), calc(100% - 30px))`\n      : phoneWidth - 60 + 'px'};\n  margin-top: -20px;\n  position: relative;\n  border-radius: 25px;\n  overflow: hidden;\n`;\n\nconst HomeButton = styled.div`\n  background-color: ${(props: HomeButtonProps) =>\n    props.color ? props.color : dark};\n  box-shadow: 0 3px\n    ${(props: HomeButtonProps) =>\n      props.shadowColor ? props.shadowColor : phoneSecondaryColor};\n  border-radius: 25px;\n  position: absolute;\n  width: 125px;\n  height: 30px;\n  left: 0;\n  right: 0;\n  bottom: 17px;\n  margin: 0 auto;\n  transition: all 0.2s linear;\n\n  &:active {\n    box-shadow: 0 0px\n      ${(props: HomeButtonProps) =>\n        props.shadowColor ? props.shadowColor : phoneSecondaryColor};\n    transform: translateY(4px);\n  }\n`;\n\nconst Camera = styled.div`\n  border-radius: 50%;\n  background-color: ${(props: CameraProps) =>\n    props.color ? props.color : cameraColor};\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: 10px;\n  right: 10%;\n`;\n\nconst VolumeButtons = styled.div`\n  background-color: ${(props: VolumeProps) =>\n    props.color ? props.color : phoneSecondaryColor};\n  height: ${phoneHeight / 6}px;\n  width: 7px;\n  position: absolute;\n  left: -7px;\n  top: 100px;\n  border-radius: 2px;\n  transition: all 0.2s linear;\n\n  &:active {\n    width: 3px;\n    transform: translateX(4px);\n  }\n`;\n\nconst LockButton = styled.div`\n  background-color: ${(props: VolumeProps) =>\n    props.color ? props.color : phoneSecondaryColor};\n  height: ${phoneHeight / 10}px;\n  width: 7px;\n  position: absolute;\n  right: -7px;\n  top: 100px;\n  border-radius: 2px;\n  transition: all 0.2s linear;\n\n  &:active {\n    width: 3px;\n    transform: translateX(-4px);\n  }\n`;\n\nconst Content = styled.div`\n  height: 100%;\n  width: 100%;\n  border-radius: 25px;\n  z-index: -1;\n`;\n\nconst Title = styled.h3`\n  color: white;\n  padding-top: 200px;\n  font-weight: 700;\n  height: 100%;\n  width: 100%;\n  text-align: center;\n`;\n\nconst renderDefault = (text?: string) => (\n  <Title>{text || 'Thanks for using react-phone.'}</Title>\n);\n\ninterface Props {\n  height?: string | number;\n  width?: string | number;\n  caseColor?: string;\n  detailsColor?: string;\n  cameraColor?: string;\n  shadowColor?: string;\n  volumeButtonsColor?: string;\n  text?: string;\n  content?: JSX.Element;\n  children?: JSX.Element | string;\n  screenColor?: string;\n}\n\nexport default function Phone(props: Props) {\n  const {\n    height,\n    width,\n    caseColor,\n    detailsColor,\n    cameraColor,\n    shadowColor,\n    volumeButtonsColor,\n    text,\n    children,\n    content,\n    screenColor,\n  } = props;\n  const component = children\n    ? children\n    : content\n    ? content\n    : renderDefault(text);\n\n  const [lockscreen, toggleLockScreen] = React.useState<boolean>(false);\n\n  return (\n    <Container\n      height={height}\n      width={width}\n      shadowColor={shadowColor}\n      color={caseColor}\n    >\n      <UpperSpeaker color={detailsColor} />\n      <Camera color={cameraColor} width={width} />\n      <VolumeButtons color={volumeButtonsColor} />\n      <LockButton onClick={() => toggleLockScreen(!lockscreen)} />\n\n      <Screen color={screenColor} height={height} width={width}>\n        <Lockscreen status={lockscreen} />\n        <Content>{component}</Content>\n      </Screen>\n      <HomeButton color={detailsColor} shadowColor={shadowColor} />\n    </Container>\n  );\n}\n","import Smartphone from './Phone';\nexport default Smartphone;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport Logo from '../assets/logo.svg';\nimport { yellow } from './constants';\n\nconst reactLinkColor = '#61dafb';\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  margin: 0 auto;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst AppLogo = styled.img`\n  pointer-events: none;\n\n  @media (prefers-reduced-motion: no-preference) {\n    animation: App-logo-spin infinite 20s linear;\n  }\n\n  @keyframes App-logo-spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst AppHeader = styled.nav`\n  font-size: calc(10px + 1.5vmin);\n  color: white;\n  text-align: center;\n  padding: 50px 20px;\n`;\n\nconst Title = styled.p`\n  font-family: Arial;\n`;\n\nconst Link = styled.a`\n  color: ${reactLinkColor};\n  box-shadow: 0 4px ${yellow};\n  font-family: Arial;\n  text-decoration: none;\n\n  &:hover {\n    color: yellow;\n  }\n`;\n\nexport default function ExampleContent() {\n  return (\n    <Container>\n      <AppHeader>\n        <AppLogo src={Logo} />\n        <Title>\n          Place a component inside Smartphone Container and you're set to go!\n        </Title>\n        <Link\n          href={'https://github.com/Turutupa/react-smartphone'}\n          target='_blank'\n        >\n          react-smartphone\n        </Link>\n      </AppHeader>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { gray, yellow } from './constants';\n\nconst Container = styled.div`\n  background-color: ${gray};\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  align-content: center;\n  justify-content: center;\n  padding-left: 80px;\n`;\n\nconst H1 = styled.h1`\n  font-size: 40px;\n  font-family: Courier New;\n  box-shadow: 0 5px ${yellow};\n  color: white;\n  margin-top: 0;\n`;\n\nconst Description = styled.p`\n  color: white;\n  font-family: Courier New;\n  font-size: 20px;\n  max-width: 500px;\n  margin-top: 0;\n`;\n\nconst Badge = styled.a`\n  background-color: ${yellow};\n  color: ${gray};\n  border-radius: 20px;\n  padding: 10px 20px;\n  text-decoration: none;\n  font-weight: bold;\n  margin-right: 10px;\n\n  &:hover {\n    filter: brightness(1.2);\n  }\n`;\n\nexport default function Component() {\n  return (\n    <Container>\n      <H1>react-smartphone</H1>\n      <Description>\n        Wrap your content in a stylish yet simple Smartphone!\n      </Description>\n      <p>\n        <Badge\n          href='https://github.com/turutupa/react-smartphone'\n          target='_blank'\n        >\n          Github\n        </Badge>\n        <Badge href='https://www.buymeacoffee.com/turutupa' target='_blank'>\n          Buy me a Beer\n        </Badge>\n      </p>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport Smartphone from './Phone';\nimport PhoneContent from './PhoneContent';\nimport Hero from './Hero';\n\nconst Container = styled.div`\n  position: relative;\n  margin: 0;\n  padding: 0;\n`;\n\nconst PhoneWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  padding: 40px 20px;\n\n  @media (min-width: 1200px) {\n    position: fixed;\n    top: 5vh;\n    left: 850px;\n  }\n`;\n\ninterface PhoneParams {\n  [key: string]: string;\n}\n\ninterface Props {\n  phoneParams: PhoneParams;\n}\n\nexport default function Component(props: Props) {\n  return (\n    <Container>\n      <Hero />\n      <PhoneWrapper>\n        <Smartphone {...props.phoneParams}>\n          <PhoneContent />\n        </Smartphone>\n      </PhoneWrapper>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { CompactPicker } from 'react-color';\nimport { Dispatch, SetStateAction } from 'react';\n\nconst Container = styled.div`\n  width: 50%;\n`;\n\nconst Label = styled.h3``;\n\ninterface Props {\n  label: string;\n  onChange: Dispatch<SetStateAction<string>>;\n}\n\nexport default function Component(props: Props) {\n  return (\n    <Container>\n      <Label>{props.label}</Label>\n      <CompactPicker onChange={(color) => props.onChange(color.hex)} />\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { Dispatch, SetStateAction } from 'react';\n\nconst Container = styled.div`\n  width: 50%;\n`;\n\nconst Input = styled.input`\n  width: 240px;\n`;\n\nconst Label = styled.h3``;\n\ninterface Props {\n  label: string;\n  min: number;\n  max: number;\n  value: number;\n  onChange: Dispatch<SetStateAction<number>>;\n}\n\nexport default function Slider(props: Props) {\n  return (\n    <Container>\n      <Label>{props.label}</Label>\n      <Input\n        type='range'\n        min={props.min}\n        max={props.max}\n        value={props.value}\n        id={props.label}\n        onChange={(e) => props.onChange(Number(e.target.value))}\n      />\n    </Container>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport ParamsSelection from './components/ParamsSelection';\nimport Slider from './components/Slider';\nimport {\n  phoneWidth,\n  phoneHeight,\n  phoneColor,\n  phoneSecondaryColor,\n  dark,\n  cameraColor as camColor,\n  reactDefaultBackground,\n} from './components/constants';\n\nconst Container = styled.div`\n  margin: 0;\n  padding: 0;\n  padding-bottom: 100px;\n  display: flex;\n  flex-direction: column;\n  max-width: 100vw !important;\n  overflow: hidden;\n`;\n\nconst Paragraph = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 80px;\n  max-width: min(650px, 100%);\n  margin-bottom: 40px;\n  margin-top: 0;\n\n  @media (min-width: 1200px) {\n    margin-left: 80px;\n    flex-wrap: wrap;\n  }\n`;\n\nconst PhoneParamsSelection = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 10px;\n  text-align: center;\n\n  @media (min-width: 1200px) {\n    margin-left: 80px;\n    padding: 50px 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    max-width: 700px;\n    flex-wrap: wrap;\n  }\n`;\n\nconst ResultWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nconst Code = styled.code`\n  padding: 10px 10px;\n  font-size: 14px;\n  border-radius: 15px;\n  background-color: #f3f3f3;\n  width: 100%;\n  text-align: left;\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n    padding: 30px 30px;\n  }\n`;\n\nconst CodeBlock = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\ninterface PhoneParams {\n  [key: string]: string;\n}\n\nfunction App() {\n  const [caseColor, setCaseColor] = React.useState<string>(phoneColor);\n  const [screenColor, setScreenColor] = React.useState<string>(\n    reactDefaultBackground\n  );\n  const [shadowColor, setShadowsColor] = React.useState<string>(\n    phoneSecondaryColor\n  );\n  const [detailsColor, setDetailsColor] = React.useState<string>(dark);\n  const [cameraColor, setCameraColor] = React.useState<string>(camColor);\n  const [volumeButtonsColor, setVolumeButtonsColor] = React.useState<string>(\n    phoneSecondaryColor\n  );\n  const [width, setWidth] = React.useState<number>(phoneWidth);\n  const [height, setHeight] = React.useState<number>(phoneHeight);\n\n  const phoneParams: PhoneParams = {\n    caseColor,\n    screenColor,\n    detailsColor,\n    shadowColor,\n    cameraColor,\n    volumeButtonsColor,\n    width: width + 'px',\n    height: height + 'px',\n  };\n\n  return (\n    <Container>\n      <Header phoneParams={phoneParams} />\n      <p style={{ marginLeft: '80px', margin: '30px 0 0 80px' }}>\n        <em style={{ fontWeight: 600 }}>\n          **Kudos to{' '}\n          <a\n            href='http://casesandberg.github.io/react-color/#api-onChange'\n            target='_blank'\n          >\n            casesandberg\n          </a>{' '}\n          for his awesome react-color color picker!\n        </em>\n      </p>\n      <Paragraph>\n        <h2 style={{ textAlign: 'left' }}>About</h2>\n        <p style={{ fontWeight: 600 }}>\n          Simple and funny smartphone container! Acts as a regular div but with\n          a smartphone frame. You can set height and width and insert any and as\n          many react components inside as you wish!\n        </p>\n        <p style={{ fontWeight: 600 }}>\n          Home button and volume button functionalities are WIP but in the\n          meantime use the power button to toggle lockscreen!\n        </p>\n      </Paragraph>\n      <Paragraph>\n        <h2 style={{ textAlign: 'left' }}>Install</h2>\n        <p style={{ fontWeight: 600 }}>To install simply run</p>\n        <Code>npm i react-smartphone</Code>\n        <p style={{ fontWeight: 600 }}>\n          How-to use it? Import Smartphone component as usual and place your\n          React Components inside it as you would in a regular div (see example\n          down below).\n        </p>\n        <Code>import SmartphoneContainer from 'react-smartphone'</Code>\n        <p style={{ fontWeight: 600 }}>\n          <strong>ALL</strong> props are optional. If you don't provide anything\n          it will render with default options (as rendered on this page).\n        </p>\n      </Paragraph>\n      <h2 style={{ textAlign: 'left', marginLeft: '80px' }}>Customize!</h2>\n      <PhoneParamsSelection>\n        <Slider\n          label='Phone width'\n          value={width}\n          min={300}\n          max={800}\n          onChange={setWidth}\n        />\n        <Slider\n          label='Phone height'\n          value={height}\n          min={500}\n          max={1000}\n          onChange={setHeight}\n        />\n        <ParamsSelection label={'Phone case color'} onChange={setCaseColor} />\n        <ParamsSelection label={'Screen color'} onChange={setScreenColor} />\n        <ParamsSelection label={'Shadows colors'} onChange={setShadowsColor} />\n        <ParamsSelection label={'Details color'} onChange={setDetailsColor} />\n        <ParamsSelection label={'Camera color'} onChange={setCameraColor} />\n        <ParamsSelection\n          label={'Volume Buttons color'}\n          onChange={setVolumeButtonsColor}\n        />\n\n        <ResultWrapper>\n          <h2 style={{ textAlign: 'left', paddingTop: '30px' }}>Result</h2>\n          <Code>\n            <CodeBlock>{`\n        <SmartphoneContainer`}</CodeBlock>\n            <span>\n              {`\n          height='${height + 'px'}' // regular height values px/%/vh/vw...\n          width='${width + 'px'}' // regular width values px/%/vh/vw...\n          caseColor='${screenColor}' // hex or rgb\n          detailsColor='${detailsColor}' // hex or rgb\n          cameraColor='${cameraColor}' // hex or rgb\n          shadowColor='${shadowColor}' // hex or rgb\n          volumeButtonsColor='${volumeButtonsColor}' // hex or rgb\n          screenColor='${screenColor}' // hex or rgb\n          >`\n                .split('\\n')\n                .map((row) => (\n                  <CodeBlock key={row} style={{ marginLeft: '25px' }}>\n                    {row}\n                  </CodeBlock>\n                ))}\n            </span>\n            <p style={{ margin: '15px 25px', fontWeight: 'bolder' }}>\n              // Your component goes here!\n            </p>\n            <CodeBlock>\n              {`\n        </SmartphoneContainer>\n        `}\n            </CodeBlock>\n          </Code>\n        </ResultWrapper>\n      </PhoneParamsSelection>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Smartphone from './components';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nexport default Smartphone;\n"],"sourceRoot":""}