{"ast":null,"code":"var __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Case from './Case';\nimport UpperSpeaker from './UpperSpeaker';\nimport Screen from './Screen';\nimport HomeButton from './HomeButton';\nimport Camera from './Camera';\nimport VolumeButtons from './VolumeButtons';\nimport LockButton from './LockButton';\nimport Content from './PhoneContent';\nimport Lockscreen from './Lockscreen';\nvar Title = styled.h3(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  color: white;\\n  padding-top: 20vmin;\\n  font-weight: 700;\\n  height: 100%;\\n  width: 100%;\\n  text-align: center;\\n\"], [\"\\n  color: white;\\n  padding-top: 20vmin;\\n  font-weight: 700;\\n  height: 100%;\\n  width: 100%;\\n  text-align: center;\\n\"])));\n\nvar renderDefault = function renderDefault(text) {\n  return _jsx(Title, {\n    children: text || 'Thanks for using react-phone.'\n  }, void 0);\n};\n\nexport default function Phone(props) {\n  var height = props.height,\n      width = props.width,\n      caseColor = props.caseColor,\n      detailsColor = props.detailsColor,\n      cameraColor = props.cameraColor,\n      shadowColor = props.shadowColor,\n      volumeButtonsColor = props.volumeButtonsColor,\n      text = props.text,\n      children = props.children,\n      content = props.content,\n      screenColor = props.screenColor,\n      homeButtonEvent = props.homeButtonEvent,\n      volumeButtonEvent = props.volumeButtonEvent;\n  var component = children ? children : content ? content : renderDefault(text);\n\n  var _a = React.useState(false),\n      lockscreen = _a[0],\n      toggleLockScreen = _a[1];\n\n  return _jsxs(Case, __assign({\n    height: height,\n    width: width,\n    shadowColor: shadowColor,\n    color: caseColor\n  }, {\n    children: [_jsx(UpperSpeaker, {\n      color: detailsColor\n    }, void 0), _jsx(Camera, {\n      color: cameraColor,\n      width: width\n    }, void 0), _jsx(VolumeButtons, {\n      onClick: volumeButtonEvent,\n      color: volumeButtonsColor\n    }, void 0), _jsx(LockButton, {\n      onClick: function onClick() {\n        return toggleLockScreen(!lockscreen);\n      }\n    }, void 0), _jsx(Screen, __assign({\n      color: screenColor,\n      height: height,\n      width: width\n    }, {\n      children: _jsxs(\"div\", {\n        children: [_jsx(Lockscreen, {\n          status: lockscreen\n        }, void 0), _jsx(Content, {\n          children: component\n        }, void 0)]\n      }, void 0)\n    }), void 0), _jsx(HomeButton, {\n      onClick: homeButtonEvent,\n      color: detailsColor,\n      shadowColor: shadowColor\n    }, void 0)]\n  }), void 0);\n}\nvar templateObject_1;","map":{"version":3,"sources":["../../src/components/Smartphone.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Case from './Case';\nimport UpperSpeaker from './UpperSpeaker';\nimport Screen from './Screen';\nimport HomeButton from './HomeButton';\nimport Camera from './Camera';\nimport VolumeButtons from './VolumeButtons';\nimport LockButton from './LockButton';\nimport Content from './PhoneContent';\nimport Lockscreen from './Lockscreen';\nvar Title = styled.h3(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  color: white;\\n  padding-top: 20vmin;\\n  font-weight: 700;\\n  height: 100%;\\n  width: 100%;\\n  text-align: center;\\n\"], [\"\\n  color: white;\\n  padding-top: 20vmin;\\n  font-weight: 700;\\n  height: 100%;\\n  width: 100%;\\n  text-align: center;\\n\"])));\nvar renderDefault = function (text) { return (_jsx(Title, { children: text || 'Thanks for using react-phone.' }, void 0)); };\nexport default function Phone(props) {\n    var height = props.height, width = props.width, caseColor = props.caseColor, detailsColor = props.detailsColor, cameraColor = props.cameraColor, shadowColor = props.shadowColor, volumeButtonsColor = props.volumeButtonsColor, text = props.text, children = props.children, content = props.content, screenColor = props.screenColor, homeButtonEvent = props.homeButtonEvent, volumeButtonEvent = props.volumeButtonEvent;\n    var component = children\n        ? children\n        : content\n            ? content\n            : renderDefault(text);\n    var _a = React.useState(false), lockscreen = _a[0], toggleLockScreen = _a[1];\n    return (_jsxs(Case, __assign({ height: height, width: width, shadowColor: shadowColor, color: caseColor }, { children: [_jsx(UpperSpeaker, { color: detailsColor }, void 0),\n            _jsx(Camera, { color: cameraColor, width: width }, void 0),\n            _jsx(VolumeButtons, { onClick: volumeButtonEvent, color: volumeButtonsColor }, void 0),\n            _jsx(LockButton, { onClick: function () { return toggleLockScreen(!lockscreen); } }, void 0),\n            _jsx(Screen, __assign({ color: screenColor, height: height, width: width }, { children: _jsxs(\"div\", { children: [_jsx(Lockscreen, { status: lockscreen }, void 0),\n                        _jsx(Content, { children: component }, void 0)] }, void 0) }), void 0),\n            _jsx(HomeButton, { onClick: homeButtonEvent, color: detailsColor, shadowColor: shadowColor }, void 0)] }), void 0));\n}\nvar templateObject_1;\n//# sourceMappingURL=Smartphone.js.map"]},"metadata":{},"sourceType":"module"}